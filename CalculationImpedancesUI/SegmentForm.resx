<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>